/*
 * FIT VUT - 2013 - GJA project 1 - Photo viewer
 * 
 * Ondrej Fibich <xfibic01@stud.fit.vutbr.cz>
 */
package cz.vutbr.fit.gja.project.gui;

import java.awt.Dimension;
import javax.swing.JDialog;
import javax.swing.event.ChangeListener;

/**
 * Scale dialog - sets details of the scale operation.
 *
 * @author Ondrej Fibich
 */
public class ScaleJDialog extends JDialog {

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;
    
    /**
     * Parent frame
     */
    private MainJFrame parent;
    
    /**
     * Scale dimension
     */
    private Dimension scaleTo;

    /**
     * Creates new form ScaleJDialog
     */
    public ScaleJDialog(MainJFrame parent) {
        super(parent, true);
        this.parent = parent;
        initComponents();
        getRootPane().setDefaultButton(okButton);
        setLocationRelativeTo(parent);
        widthJSpinner.setValue(Integer.valueOf(parent.getImage().getData().getIconWidth()));
        heightJSpinner.setValue(Integer.valueOf(parent.getImage().getData().getIconHeight()));
    }
    
    /**
     * Gets retrieved scale
     * 
     * @return dimension
     */
    public Dimension getScale() {
        return scaleTo;
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headerJPanel = new javax.swing.JPanel();
        headerJLabel = new javax.swing.JLabel();
        mainJPanel = new javax.swing.JPanel();
        widthJLabel = new javax.swing.JLabel();
        heightJLabel = new javax.swing.JLabel();
        ratioJCheckBox = new javax.swing.JCheckBox();
        widthJSpinner = new javax.swing.JSpinner();
        heightJSpinner = new javax.swing.JSpinner();
        buttonJPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle("Scale image");
        setMinimumSize(new java.awt.Dimension(250, 190));
        setPreferredSize(new java.awt.Dimension(250, 190));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        headerJPanel.setBackground(new java.awt.Color(254, 254, 254));
        headerJPanel.setName("headerJPanel"); // NOI18N
        headerJPanel.setLayout(new java.awt.GridBagLayout());

        headerJLabel.setFont(headerJLabel.getFont().deriveFont(headerJLabel.getFont().getStyle() | java.awt.Font.BOLD, headerJLabel.getFont().getSize()+2));
        headerJLabel.setText("Scale properties");
        headerJLabel.setName("headerJLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(8, 12, 8, 12);
        headerJPanel.add(headerJLabel, gridBagConstraints);

        getContentPane().add(headerJPanel, java.awt.BorderLayout.PAGE_START);

        mainJPanel.setName("mainJPanel"); // NOI18N
        mainJPanel.setLayout(new java.awt.GridBagLayout());

        widthJLabel.setText("Width:");
        widthJLabel.setName("widthJLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 12, 4, 4);
        mainJPanel.add(widthJLabel, gridBagConstraints);

        heightJLabel.setText("Height:");
        heightJLabel.setName("heightJLabel"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 12, 4, 4);
        mainJPanel.add(heightJLabel, gridBagConstraints);

        ratioJCheckBox.setSelected(true);
        ratioJCheckBox.setText("Keep ratio");
        ratioJCheckBox.setName("ratioJCheckBox"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        mainJPanel.add(ratioJCheckBox, gridBagConstraints);

        widthJSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        widthJSpinner.setMinimumSize(new java.awt.Dimension(70, 26));
        widthJSpinner.setName("widthJSpinner"); // NOI18N
        widthJSpinner.setPreferredSize(new java.awt.Dimension(70, 26));
        widthJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                widthJSpinnerStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 5, 0, 5);
        mainJPanel.add(widthJSpinner, gridBagConstraints);

        heightJSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        heightJSpinner.setMinimumSize(new java.awt.Dimension(70, 26));
        heightJSpinner.setName("heightJSpinner"); // NOI18N
        heightJSpinner.setPreferredSize(new java.awt.Dimension(70, 26));
        heightJSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                heightJSpinnerStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 5);
        mainJPanel.add(heightJSpinner, gridBagConstraints);

        getContentPane().add(mainJPanel, java.awt.BorderLayout.CENTER);

        buttonJPanel.setName("buttonJPanel"); // NOI18N
        buttonJPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(okButton);
        getRootPane().setDefaultButton(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonJPanel.add(cancelButton);

        getContentPane().add(buttonJPanel, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed
    
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    /**
     * Width changed (update height if ratio enabled)
     * 
     * @param evt 
     */
    private void widthJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_widthJSpinnerStateChanged
        if (ratioJCheckBox.isSelected()) {
            double ow = parent.getImage().getData().getIconWidth();
            double oh = parent.getImage().getData().getIconHeight();
            double w = (Integer) widthJSpinner.getValue();
            // hack
            ChangeListener chl = heightJSpinner.getChangeListeners()[0];
            heightJSpinner.removeChangeListener(chl);
            heightJSpinner.setValue(Integer.valueOf((int) Math.round((w / ow) * oh)));
            heightJSpinner.addChangeListener(chl);
        }
    }//GEN-LAST:event_widthJSpinnerStateChanged
        
    /**
     * Height changed (update width if ratio enabled)
     * 
     * @param evt 
     */
    private void heightJSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_heightJSpinnerStateChanged
        if (ratioJCheckBox.isSelected()) {
            double ow = parent.getImage().getData().getIconWidth();
            double oh = parent.getImage().getData().getIconHeight();
            double h = (Integer) heightJSpinner.getValue();
            // hack
            ChangeListener chl = widthJSpinner.getChangeListeners()[0];
            widthJSpinner.removeChangeListener(chl);
            widthJSpinner.setValue(Integer.valueOf((int) Math.round((h / oh) * ow)));
            widthJSpinner.addChangeListener(chl);
        }
    }//GEN-LAST:event_heightJSpinnerStateChanged
    
    /**
     * Closes dialog
     * 
     * @param retStatus 
     */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        
        if (returnStatus == RET_OK) {
            scaleTo = new Dimension(
                    (Integer) widthJSpinner.getValue(),
                    (Integer) heightJSpinner.getValue()
            );
        }
        
        setVisible(false);
        dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonJPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel headerJLabel;
    private javax.swing.JPanel headerJPanel;
    private javax.swing.JLabel heightJLabel;
    private javax.swing.JSpinner heightJSpinner;
    private javax.swing.JPanel mainJPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JCheckBox ratioJCheckBox;
    private javax.swing.JLabel widthJLabel;
    private javax.swing.JSpinner widthJSpinner;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = RET_CANCEL;
}
